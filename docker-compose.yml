version: '3'
services:
# Back
  # mongo server
  mongo:
    container_name: py_mongoserver
    hostname: mongo
    ports:
     - "27017:27017"
    image: "mongo:3.4"
    restart: always
    command: mongod
    network_mode: bridge
    volumes: 
     - './data/mongo:/data/db'
  
  # worker 
  worker:
    container_name: py_worker
    hostname: worker
    ports:
     - "5003:5003"
    build: ./worker/
    network_mode: bridge
    depends_on:
      - mongo
    volumes:
     - './worker:/opt/pytheas_worker'
     - './conf:/opt/pytheas_worker/conf'
     - './logs:/opt/pytheas_worker/logs'
    links:
     - mongo

  # restapp
  restapp:
    container_name: py_restapp
    hostname: restapp
    ports:
     - "5053:5053"
    build: ./restapp/
    network_mode: bridge
    restart: always
    depends_on:
      - mongo
    volumes:
     - './restapp:/opt/pytheas_rest'
     - './conf:/opt/pytheas_rest/conf'
     - './logs:/opt/pytheas_rest/logs'
    links:
      - mongo
      - worker

# Front
  # mongo client
  mongoclient:
    container_name: py_mongoclient
    ports:
     - "3000:3000"
    image: "mongoclient/mongoclient"
    restart: always
    depends_on:
      - mongo
    

  # wepapp
  webapp:
    container_name: py_webapp
    hostname: webapp
    ports:
     - "5050:5050"
    build: ./webapp/
    network_mode: bridge
    restart: always
    depends_on:
     - restapp
    volumes:
     - './webapp/:/opt/pytheas_webapp'
     - './data:/opt/pytheas_webapp/data'
     - './logs:/opt/pytheas_webapp/logs'
     - './conf:/opt/pytheas_webapp/conf'
    links:
      - restapp
      - mongo
